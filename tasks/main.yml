---
- name: checking some things
  stat:
    path: "{{ private_bin_www_directory }}/index.php"
  register: privatebin_existing

- name: include distro variables for package installs
  include_vars:
    file: "{{ ansible_distribution }}/{{ ansible_distribution_release }}/packages.yml"
  when: ansible_distribution == 'Ubuntu'

- name: install libsodium packages
  apt:
    name: "{{ libsodium_packages }}"
    update_cache: yes
  when:
    - private_bin_install_libsodium == true
    - ansible_distribution == 'Ubuntu'

- name: making directories
  file:
    path: "{{ private_bin_www_directory }}"
    state: directory
    mode: 0750
    owner: "{{ private_bin_web_user }}"
    group: "{{ private_bin_web_group }}"
  when: privatebin_existing.stat.exists == False

- name: extract privatebin
  unarchive:
    src: "{{ private_bin_repo }}/archive/{{ private_bin_version }}.{{ private_bin_archive_format }}"
    dest: "{{ private_bin_www_directory }}"
    owner: "{{ private_bin_web_user }}"
    group: "{{ private_bin_web_group }}"
    remote_src: yes
  when: privatebin_existing.stat.exists == False

- name: moving files around
  shell:
    chdir: "{{ private_bin_www_directory }}"
    cmd: "mv PrivateBin-{{ private_bin_version }}/* ."
  when: privatebin_existing.stat.exists == False

- name: Setting up config file
  template:
    src: templates/conf.php.j2
    dest: "{{ private_bin_www_directory }}/cfg/conf.php"
    owner: "{{ private_bin_web_user }}"
    group: "{{ private_bin_web_group }}"
    mode: 0640

- name: cleanup
  file:
    path: "{{ private_bin_www_directory }}/PrivateBin-{{ private_bin_version }}"
    state: absent
  when: privatebin_existing.stat.exists == False
